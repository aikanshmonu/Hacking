#include<iostream>
using namespace std;

struct node
{ int data;
  node* next;
};

node* front=NULL;
node* rear=NULL;

void enqueue(int x)
{ 
  node* newnode=new node;  
  newnode->data=x;
  newnode->next=NULL;
  
  if(rear==NULL)
  {front=rear=newnode;
   rear->next=front;
  }
  else
  { rear->next=newnode;
    rear=newnode;
    rear->next=front;
  }

}

void dequeue()
{ node* temp=front;
  
  if(front==NULL && rear==NULL)
  cout<<"underflow"<<endl;
  else if(front==rear)
  { front=rear=NULL;
    delete temp;
  }
  else
  { front=front->next;
    rear->next=front;
    delete temp; 
  }
  
}
 
void peek()
{ 
  if(front==NULL && rear==NULL)
  cout<<"empty queue"<<endl;
  else
  cout<<front->data<<" "<<endl;

}  

void display()
{ node* temp=front;
	
  if(front==NULL && rear==NULL)
  cout<<"nothing to show"<<endl;
  else
  {  while(temp->next!=front)
     { cout<<temp->data<<" ";
       temp=temp->next;
	 }
  }
  
cout<<temp->data<<endl;
}  

main()
{ enqueue(2);
  enqueue(-1);
  enqueue(5);
  display();
  

dequeue();
display();
dequeue();
display();
dequeue();
dequeue(); 
  	
}
